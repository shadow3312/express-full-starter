services:
  #Db
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-myapp}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Redis (optional)
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Dev env
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: app_dev
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-myapp}
      REDIS_URL: redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    profiles:
      - dev

  # Prod env
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_prod
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
    volumes:
      - /app/dist
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    profiles:
      - prod
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
